<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css"
  rel="stylesheet"
  integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1"
  crossorigin="anonymous"
/>

<link rel="stylesheet" href="../../CSS/styles.css" />
<!------ Include the above in your HEAD tag ---------->

<link
  href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css"
  rel="stylesheet"
  integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1"
  crossorigin="anonymous"
/>
<link
  rel="stylesheet"
  href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/styles/default.min.css"
/>
<script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/highlight.min.js"></script>
<script>
  hljs.initHighlightingOnLoad();
</script>
<body class="home">
  <div class="container-fluid display-table">
    <div class="row special display-table-row">
      <div
        class="col-md-2 col-sm-1 hidden-xs display-table-cell v-align box"
        id="navigation"
      >
        <div class="navi">
          <ul>
            <li class="">
              <i
                class="fa fa-arrow-circle-left text-white"
                aria-hidden="true"
              ></i>
              <a href="/"> <span class="hidden-xs">Home</span></a>
            </li>
            <li></li>
            <% files.forEach(function(file){%>
            <li class="active">
              <a href="#" onclick="loadCode(this)"
                ><i class="<%=file.icon%>" aria-hidden="true"></i
                ><span class="hidden-xs hidden-sm"><%=file.filename%></span></a
              >
              <hr class="bg-white" />
            </li>
            <%});%>
          </ul>
        </div>
      </div>
      <div class="col-md-10 col-sm-11 display-table-cell v-align">
        <div class="user-dashboard p-0">
          <%- include("../partials/header") %>
          <div class="row">
            <div class="col-md-8 p-3">
              <a href="" class="btn btn-lg btn-outline-primary" id="runcode">
                <i class="fa fa-play-circle"></i>
              </a>
              <a
                href="https://github.com/DSC-Mount-Kenya-University/Live_code"
                class="btn btn-lg btn-outline-danger"
                id="runcode"
              >
                <i class="fa fa-git"></i>
              </a>
            </div>
            <div class="col-md-2 p-3">
              <div class="form-check form-switch">
                <input
                  class="form-check-input"
                  type="checkbox"
                  id="switch"
                  unchecked
                  onchange="liveReload(this)"
                />
                <label class="form-check-label" for="switch">Live reload</label>
              </div>
            </div>
          </div>
          <!-- code goes here -->
          <br />
          <div class="codebar">
            <pre><code class="p-3 shadow" id="code" style="height: auto;min-height: 400px !important; max-height: 600px; font-family:monospace;font-size: large;">Select file to open</code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
<script>
  var URL_FRAME = "";

  var SERVER_API = `${document.URL}`;
  const url = SERVER_API;
  let domain = new URL(url);
  SERVER_API = `http://${domain.hostname}:3000/`;
  var myTimer;

  $(document).ready(function () {
    $('[data-toggle="offcanvas"]').click(function () {
      $("#navigation").toggleClass("hidden-xs");
    });
  });

  function loadCode(element) {
    element.preventDefault;
    element.classList.add("active");
    var xhr = new XMLHttpRequest();

    xhr.open("GET", `${SERVER_API}class-data/<%=id%>/${element.textContent}`);
    xhr.setRequestHeader("Access-Control-Allow-Origin", "*");
    URL_FRAME = `${element.textContent}`;
    xhr.onload = function () {
      if (this.status == 200) {
        var obj = JSON.parse(this.response);
        var data = obj.data;
        document.getElementById("code").innerText = data;

        document.getElementById("runcode").href =
          `${SERVER_API}run/` + obj.filename;
        if (obj.filename.includes(".html")) {
          document.getElementById("code").classList.add("language-html");

          document.getElementById("code").classList.remove("language-css");
          document.getElementById("code").classList.remove("language-js");
          document.getElementById("code").classList.remove("language-py");
        } else if (obj.filename.includes(".css")) {
          document.getElementById("code").classList.add("language-css");
          document.getElementById("code").classList.remove("language-html");
          document.getElementById("code").classList.remove("language-js");
          document.getElementById("code").classList.remove("language-py");
        } else if (obj.filename.includes(".js")) {
          document.getElementById("code").classList.remove("language-css");
          document.getElementById("code").classList.remove("language-html");
          document.getElementById("code").classList.remove("language-py");
          document.getElementById("code").classList.add("language-js");
        } else if (obj.filename.includes(".py")) {
          document.getElementById("code").classList.remove("language-css");
          document.getElementById("code").classList.remove("language-html");
          document.getElementById("code").classList.remove("language-js");
          document.getElementById("code").classList.add("language-py");
        }
        var element = document.querySelector(".codebar");
        var blocks = element.querySelectorAll("pre code");
        blocks.forEach(hljs.highlightBlock);
      }
    };
    xhr.send();
  }

  async function async_fectch() {
    var xhr = new XMLHttpRequest();
    xhr.open("GET", `${SERVER_API}class-data/<%=id%>/${URL_FRAME}`);
    xhr.setRequestHeader("Access-Control-Allow-Origin", SERVER_API);
    xhr.onload = function () {
      if (this.status == 200) {
        var obj = JSON.parse(this.response);
        var data = obj.data;
        document.getElementById("code").innerText = data;
        if (obj.filename.includes(".html")) {
          document.getElementById("runcode").href =
            `${SERVER_API}run/` + obj.filename;

          document.getElementById("code").classList.add("language-html");

          document.getElementById("code").classList.remove("language-css");
          document.getElementById("code").classList.remove("language-js");
          document.getElementById("code").classList.remove("language-py");
        } else if (obj.filename.includes(".css")) {
          document.getElementById("code").classList.add("language-css");
          document.getElementById("code").classList.remove("language-html");
          document.getElementById("code").classList.remove("language-js");
          document.getElementById("code").classList.remove("language-py");
        } else if (obj.filename.includes(".js")) {
          document.getElementById("code").classList.remove("language-css");
          document.getElementById("code").classList.remove("language-html");
          document.getElementById("code").classList.remove("language-py");
          document.getElementById("code").classList.add("language-js");
        } else if (obj.filename.includes(".py")) {
          document.getElementById("code").classList.remove("language-css");
          document.getElementById("code").classList.remove("language-html");
          document.getElementById("code").classList.remove("language-js");
          document.getElementById("code").classList.add("language-py");
        }
        var element = document.querySelector(".codebar");
        var blocks = element.querySelectorAll("pre code");
        blocks.forEach(hljs.highlightBlock);
      }
    };
    xhr.send();
  }

  function liveReload(element) {
    if (element.checked) {
      myTimer = setInterval(async_fectch, 800);
    } else {
      stopLiveReload();
    }
  }
  function stopLiveReload() {
    console.log("Stopped live reload!", myTimer);

    for (let index = 1; index < myTimer + 3; index++) {
      window.clearInterval(index);
    }
  }
</script>
